name: Generate Index Page

on:
  push:
    branches:
      - debug
      - main
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  build-index:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # Fetch all history for accurate commit dates
          fetch-depth: 0

      - name: Generate index.html
        env:
          # Use repository variables for the title and links, with fallback defaults.
          PAGE_TITLE: ${{ vars.PAGE_TITLE || 'My Projects' }}
          LINKEDIN_URL: ${{ vars.LINKEDIN_URL || '#' }}
          GH_URL: ${{ vars.GH_URL || '#' }}
          STACKOVERFLOW_URL: ${{ vars.STACKOVERFLOW_URL || '#' }}
        run: |
          # Start writing the new index.html with the full head and styles
          cat <<'EOF' > index.html
          <!DOCTYPE html>
          <html lang="en">
          <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>%%PAGE_TITLE%%</title>
            <style>
              :root {
                --bg-color: #ffffff; --text-color: #24292f; --link-color: #0969da;
                --border-color: #d0d7de; --card-bg: #f6f8fa; --header-border: #d8dee4;
                --input-bg: #ffffff; --input-border: #d0d7de; --shadow-color: rgba(140, 149, 159, 0.15);
                --tree-line-color: #d8dee4;
              }
              [data-theme="dark"] {
                --bg-color: #0d1117; --text-color: #c9d1d9; --link-color: #58a6ff;
                --border-color: #30363d; --card-bg: #161b22; --header-border: #21262d;
                --input-bg: #0d1117; --input-border: #30363d; --shadow-color: rgba(0, 0, 0, 0.3);
                --tree-line-color: #21262d;
              }
              body { font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Helvetica, Arial, sans-serif; margin: 0; background-color: var(--bg-color); color: var(--text-color); transition: background-color 0.2s, color 0.2s; }
              .container { max-width: 800px; margin: 40px auto; padding: 20px; }
              header { display: flex; justify-content: space-between; align-items: center; border-bottom: 1px solid var(--header-border); padding-bottom: 1em; }
              h1 { font-size: 2em; font-weight: 600; margin: 0; }
              h2 { font-size: 1.5em; margin-top: 2em; border-bottom: 1px solid var(--border-color); padding-bottom: .3em; }
              .credentials { display: flex; gap: 0.75em; margin-top: 1.5em; flex-wrap: wrap; }
              .credential-link { display: inline-flex; align-items: center; gap: 8px; padding: 8px 12px; background-color: var(--card-bg); border: 1px solid var(--border-color); border-radius: 6px; text-decoration: none; color: var(--text-color); transition: background-color 0.2s; }
              .credential-link:hover { background-color: var(--border-color); }
              .credential-link svg { width: 20px; height: 20px; fill: currentColor; }
              .section-header { display: flex; justify-content: space-between; align-items: center; }
              .tree-controls button { font-size: 0.8em; padding: 4px 8px; margin-left: 8px; background-color: var(--card-bg); border: 1px solid var(--border-color); color: var(--text-color); border-radius: 6px; cursor: pointer; }
              #search-box { width: 100%; padding: 12px; margin-top: 2em; border: 1px solid var(--input-border); border-radius: 6px; background-color: var(--input-bg); color: var(--text-color); font-size: 1em; box-sizing: border-box; }
              .project-grid { display: grid; grid-template-columns: 1fr; gap: 1em; }
              .project-card { background-color: var(--card-bg); border: 1px solid var(--border-color); border-radius: 6px; padding: 1.5em; transition: transform 0.2s, box-shadow 0.2s; }
              .project-card:hover { transform: translateY(-3px); box-shadow: 0 4px 12px var(--shadow-color); }
              .project-card a { text-decoration: none; color: var(--link-color); font-weight: 600; font-size: 1.2em; }
              .project-card .path { font-size: 0.85em; color: #8b949e; display: block; margin-top: 8px; font-family: monospace; word-break: break-all; }
              #theme-toggle { padding: 8px 12px; background-color: var(--card-bg); border: 1px solid var(--border-color); color: var(--text-color); border-radius: 6px; cursor: pointer; }
              .tree { list-style: none; padding: 0; padding-left: 20px; margin-top: 1em; }
              .tree-node { padding: 4px 0; }
              .tree-node .label { cursor: pointer; display: inline-block; padding: 2px 5px; border-radius: 4px; }
              .tree-node .label:hover { background-color: var(--card-bg); }
              .tree-node .icon { margin-right: 8px; width: 1em; display: inline-block; }
              .tree-node ul { list-style: none; padding-left: 25px; border-left: 1px solid var(--tree-line-color); display: none; }
              .tree-node.open > ul { display: block; }
              .tree-node.open > .label > .icon::before { content: '📂'; }
              .tree-node:not(.open) > .label > .icon::before { content: '📁'; }
              .tree-node.file > .label > .icon::before { content: '📄'; }
              .tree-node.file .label { cursor: default; }
              .tree-node.file a { color: var(--link-color); text-decoration: none; }
              .tree-node.file a:hover { text-decoration: underline; }
            </style>
          </head>
          <body>
            <div class="container">
              <header>
                <h1>%%PAGE_TITLE%%</h1>
                <button id="theme-toggle" title="Toggle theme">🌓</button>
              </header>
              
              <div class="credentials">
                <a href="${LINKEDIN_URL}" target="_blank" rel="noopener noreferrer" class="credential-link" title="LinkedIn"><svg viewBox="0 0 24 24"><path d="M20.5 2h-17A1.5 1.5 0 0 0 2 3.5v17A1.5 1.5 0 0 0 3.5 22h17a1.5 1.5 0 0 0 1.5-1.5v-17A1.5 1.5 0 0 0 20.5 2zM8 19H5v-9h3zM6.5 8.25A1.75 1.75 0 1 1 8.25 6.5 1.75 1.75 0 0 1 6.5 8.25zM19 19h-3v-4.75c0-1.4-1.2-2.5-2.5-2.5S11 12.85 11 14.25V19h-3v-9h2.9v1.3a3.11 3.11 0 0 1 2.6-1.4c2.5 0 4.5 2.2 4.5 5.1z"></path></svg><span>LinkedIn</span></a>
                <a href="${GH_URL}" target="_blank" rel="noopener noreferrer" class="credential-link" title="GitHub"><svg viewBox="0 0 16 16"><path d="M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0 0 16 8c0-4.42-3.58-8-8-8z"></path></svg><span>GitHub</span></a>
                <a href="${STACKOVERFLOW_URL}" target="_blank" rel="noopener noreferrer" class="credential-link" title="Stack Overflow"><svg viewBox="0 0 384 512"><path d="M290.7 311L95 269.7 86.8 309l195.7 41zm51-87L188.2 95.7l-25.5 30.8 153.5 128.3zm-31.2-70.1l-188.3 85.8 20.1 31.1 188.3-85.8zM32 396.4l195.7 41.1-12.7 32.6L32 430zM320 32L143.7 220.2l-25.5 30.8L320 62.8zM48 320l195.7 41 12.7-32.6L48 320z"></path></svg><span>Stack Overflow</span></a>
                <a href="/docs/resume.pdf" target="_blank" rel="noopener noreferrer" class="credential-link" title="Resume"><svg viewBox="0 0 24 24"><path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8l-6-6zM6 20V4h7v5h5v11H6z"></path></svg><span>Resume</span></a>
              </div>

              <input type="search" id="search-box" placeholder="Search all projects...">
              <main>
                <section id="latest-updates">
                  <h2>Latest Updates</h2>
                  <div class="project-grid">
          EOF

          # Replace the title placeholder in both <title> and <h1>
          sed -i "s|%%PAGE_TITLE%%|${PAGE_TITLE}|g" index.html

          # Generate and append the "Latest Updates" cards
          for file in $(git ls-files -z -- '*.html' | grep -v -z '^docs/' | xargs -0 -n1 -I{} -- git log -1 --format="%ct {}" -- {} | sort -rn | head -n 5 | awk '{print $2}' | grep -v "index.html"); do
            clean_file=$(echo "$file" | sed 's|^\./||')
            title=$(echo "$clean_file" | sed 's/\.html$//; s|/| : |g; s/-/ /g; s/_/ /g; s/\b\(.\)/\u\1/g')
            echo "<div class='project-card' data-title='${title} ${clean_file}'><a href='/${clean_file}'>${title}</a><span class='path'>/${clean_file}</span></div>" >> index.html
          done

          # Append the middle part of the HTML
          cat <<'EOF' >> index.html
                  </div>
                </section>
                <section id="full-directory">
                  <div class="section-header">
                    <h2>Full Directory</h2>
                    <div class="tree-controls">
                      <button id="expand-all-btn">Expand All</button>
                      <button id="collapse-all-btn">Collapse All</button>
                    </div>
                  </div>
                  <ul id="tree-root" class="tree"></ul>
                </section>
              </main>
            </div>
            <script>
              const filePaths = 
          EOF

          # Generate the JSON array of all files and append it
          find . -type f -name "*.html" ! -name "index.html" ! -path "./docs/*" | sed 's|^\./||' | sort | jq -R -s 'split("\n") | map(select(length > 0))' >> index.html

          # Append the rest of the JavaScript and closing body/html tags
          cat <<'EOF' >> index.html
              ;
              function buildFileTree(paths) {
                const tree = {};
                paths.forEach(path => {
                  let currentLevel = tree;
                  const parts = path.split('/');
                  parts.forEach((part, index) => {
                    if (!currentLevel[part]) { currentLevel[part] = {}; }
                    if (index < parts.length - 1) { currentLevel = currentLevel[part]; }
                  });
                });
                return tree;
              }
              function renderTree(node, pathPrefix = '') {
                let html = '';
                Object.keys(node).sort().forEach(key => {
                  const currentPath = pathPrefix ? `${pathPrefix}/${key}` : key;
                  const isFile = key.endsWith('.html');
                  if (isFile) {
                    html += `<li class="tree-node file"><span class="label"><span class="icon"></span><a href="/${currentPath}">${key.replace('.html', '')}</a></span></li>`;
                  } else {
                    const childrenHtml = renderTree(node[key], currentPath);
                    if (childrenHtml) {
                      html += `<li class="tree-node folder"><span class="label"><span class="icon"></span>${key}</span><ul>${childrenHtml}</ul></li>`;
                    }
                  }
                });
                return html;
              }
              if (filePaths && filePaths.length > 0) {
                const fileTree = buildFileTree(filePaths);
                document.getElementById('tree-root').innerHTML = renderTree(fileTree);
              }
              document.getElementById('tree-root').addEventListener('click', (e) => {
                const label = e.target.closest('.label');
                if (label && label.parentElement.classList.contains('folder')) {
                  label.parentElement.classList.toggle('open');
                }
              });
              document.getElementById('expand-all-btn').addEventListener('click', () => {
                document.querySelectorAll('.tree-node.folder').forEach(folder => folder.classList.add('open'));
              });
              document.getElementById('collapse-all-btn').addEventListener('click', () => {
                document.querySelectorAll('.tree-node.folder').forEach(folder => folder.classList.remove('open'));
              });
              const themeToggle = document.getElementById('theme-toggle');
              const currentTheme = localStorage.getItem('theme') || (window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light');
              document.documentElement.setAttribute('data-theme', currentTheme);
              themeToggle.addEventListener('click', () => {
                let theme = document.documentElement.getAttribute('data-theme') === 'dark' ? 'light' : 'dark';
                document.documentElement.setAttribute('data-theme', theme);
                localStorage.setItem('theme', theme);
              });
              const searchBox = document.getElementById('search-box');
              searchBox.addEventListener('keyup', (e) => {
                const searchTerm = e.target.value.toLowerCase();
                document.querySelectorAll('.project-card').forEach(card => {
                  card.style.display = card.getAttribute('data-title').toLowerCase().includes(searchTerm) ? 'block' : 'none';
                });
                document.querySelectorAll('#tree-root li').forEach(li => {
                  const isMatch = li.textContent.toLowerCase().includes(searchTerm);
                  li.style.display = isMatch ? '' : 'none';
                  if (isMatch && searchTerm) {
                    let parent = li.parentElement.closest('.folder');
                    while(parent) {
                      parent.classList.add('open');
                      parent.style.display = '';
                      parent = parent.parentElement.closest('.folder');
                    }
                  }
                });
              });
            </script>
          </body>
          </html>
          EOF

      - name: Commit index.html
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          file_pattern: index.html
          commit_user_name: "GitHub Actions Bot"
          commit_user_email: "github-actions[bot]@users.noreply.github.com"

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: '.'

  deploy:
    needs: build-index
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
